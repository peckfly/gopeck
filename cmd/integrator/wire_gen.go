// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/ClickHouse/clickhouse-go/v2/lib/driver"
	"github.com/peckfly/gopeck/internal/conf"
	"github.com/peckfly/gopeck/internal/mods/common/data"
	"github.com/peckfly/gopeck/internal/mods/integrator/biz"
	data2 "github.com/peckfly/gopeck/internal/mods/integrator/data"
	"github.com/peckfly/gopeck/internal/mods/integrator/server"
	"github.com/peckfly/gopeck/internal/mods/integrator/service"
	"github.com/peckfly/gopeck/pkg/cachex"
	"github.com/peckfly/gopeck/pkg/registry"
	"go.etcd.io/etcd/client/v3"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func wireApp(serverConf *conf.ServerConf, conn driver.Conn, client *clientv3.Client, cache cachex.Cache, db *gorm.DB, registrar registry.Registrar) *server.IntegratorServer {
	queRepository := data.NewQueRepository(cache)
	reporterRepository := data2.NewReporterRepository(conn, serverConf)
	recordRepository := data.NewRecordRepository(db)
	integratorUsecase := biz.NewIntegratorUsecase(queRepository, reporterRepository, recordRepository)
	integrateService := service.NewIntegrateService(integratorUsecase)
	integratorServer := server.NewIntegratorServer(serverConf, integrateService, registrar)
	return integratorServer
}

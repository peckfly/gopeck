// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.0
// source: api/pecker/v1/peck.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PeckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId              uint64            `protobuf:"varint,1,opt,name=planId,proto3" json:"planId,omitempty"`
	TaskId              uint64            `protobuf:"varint,2,opt,name=taskId,proto3" json:"taskId,omitempty"`
	StressType          int32             `protobuf:"varint,3,opt,name=stressType,proto3" json:"stressType,omitempty"`
	StressMode          int32             `protobuf:"varint,35,opt,name=stressMode,proto3" json:"stressMode,omitempty"`
	Num                 int32             `protobuf:"varint,4,opt,name=num,proto3" json:"num,omitempty"`
	StepIntervalTime    int32             `protobuf:"varint,32,opt,name=stepIntervalTime,proto3" json:"stepIntervalTime,omitempty"`
	Nums                []int32           `protobuf:"varint,33,rep,packed,name=nums,proto3" json:"nums,omitempty"`
	Addr                string            `protobuf:"bytes,34,opt,name=addr,proto3" json:"addr,omitempty"`
	MaxConnections      int32             `protobuf:"varint,6,opt,name=maxConnections,proto3" json:"maxConnections,omitempty"`
	MaxIdleConnections  int32             `protobuf:"varint,7,opt,name=maxIdleConnections,proto3" json:"maxIdleConnections,omitempty"`
	StressTime          int32             `protobuf:"varint,8,opt,name=stressTime,proto3" json:"stressTime,omitempty"`
	Timeout             int32             `protobuf:"varint,9,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Url                 string            `protobuf:"bytes,10,opt,name=url,proto3" json:"url,omitempty"`
	Method              string            `protobuf:"bytes,11,opt,name=method,proto3" json:"method,omitempty"`
	Headers             map[string]string `protobuf:"bytes,12,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Query               string            `protobuf:"bytes,13,opt,name=query,proto3" json:"query,omitempty"`
	Body                string            `protobuf:"bytes,14,opt,name=body,proto3" json:"body,omitempty"`
	DynamicParams       []*DynamicParam   `protobuf:"bytes,15,rep,name=dynamicParams,proto3" json:"dynamicParams,omitempty"`
	ResponseCheckScript string            `protobuf:"bytes,16,opt,name=responseCheckScript,proto3" json:"responseCheckScript,omitempty"`
	DisableKeepAlive    bool              `protobuf:"varint,17,opt,name=disableKeepAlive,proto3" json:"disableKeepAlive,omitempty"`
	H2                  bool              `protobuf:"varint,18,opt,name=h2,proto3" json:"h2,omitempty"`
	MaxBodySize         int32             `protobuf:"varint,19,opt,name=maxBodySize,proto3" json:"maxBodySize,omitempty"`
	DisableCompression  bool              `protobuf:"varint,20,opt,name=disableCompression,proto3" json:"disableCompression,omitempty"`
	DisableRedirects    bool              `protobuf:"varint,21,opt,name=disableRedirects,proto3" json:"disableRedirects,omitempty"`
	Proxy               string            `protobuf:"bytes,22,opt,name=proxy,proto3" json:"proxy,omitempty"`
}

func (x *PeckRequest) Reset() {
	*x = PeckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pecker_v1_peck_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeckRequest) ProtoMessage() {}

func (x *PeckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_pecker_v1_peck_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeckRequest.ProtoReflect.Descriptor instead.
func (*PeckRequest) Descriptor() ([]byte, []int) {
	return file_api_pecker_v1_peck_proto_rawDescGZIP(), []int{0}
}

func (x *PeckRequest) GetPlanId() uint64 {
	if x != nil {
		return x.PlanId
	}
	return 0
}

func (x *PeckRequest) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *PeckRequest) GetStressType() int32 {
	if x != nil {
		return x.StressType
	}
	return 0
}

func (x *PeckRequest) GetStressMode() int32 {
	if x != nil {
		return x.StressMode
	}
	return 0
}

func (x *PeckRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *PeckRequest) GetStepIntervalTime() int32 {
	if x != nil {
		return x.StepIntervalTime
	}
	return 0
}

func (x *PeckRequest) GetNums() []int32 {
	if x != nil {
		return x.Nums
	}
	return nil
}

func (x *PeckRequest) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *PeckRequest) GetMaxConnections() int32 {
	if x != nil {
		return x.MaxConnections
	}
	return 0
}

func (x *PeckRequest) GetMaxIdleConnections() int32 {
	if x != nil {
		return x.MaxIdleConnections
	}
	return 0
}

func (x *PeckRequest) GetStressTime() int32 {
	if x != nil {
		return x.StressTime
	}
	return 0
}

func (x *PeckRequest) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *PeckRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PeckRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *PeckRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *PeckRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *PeckRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *PeckRequest) GetDynamicParams() []*DynamicParam {
	if x != nil {
		return x.DynamicParams
	}
	return nil
}

func (x *PeckRequest) GetResponseCheckScript() string {
	if x != nil {
		return x.ResponseCheckScript
	}
	return ""
}

func (x *PeckRequest) GetDisableKeepAlive() bool {
	if x != nil {
		return x.DisableKeepAlive
	}
	return false
}

func (x *PeckRequest) GetH2() bool {
	if x != nil {
		return x.H2
	}
	return false
}

func (x *PeckRequest) GetMaxBodySize() int32 {
	if x != nil {
		return x.MaxBodySize
	}
	return 0
}

func (x *PeckRequest) GetDisableCompression() bool {
	if x != nil {
		return x.DisableCompression
	}
	return false
}

func (x *PeckRequest) GetDisableRedirects() bool {
	if x != nil {
		return x.DisableRedirects
	}
	return false
}

func (x *PeckRequest) GetProxy() string {
	if x != nil {
		return x.Proxy
	}
	return ""
}

type DynamicParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers map[string]string `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Query   map[string]string `protobuf:"bytes,2,rep,name=query,proto3" json:"query,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body    string            `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *DynamicParam) Reset() {
	*x = DynamicParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pecker_v1_peck_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicParam) ProtoMessage() {}

func (x *DynamicParam) ProtoReflect() protoreflect.Message {
	mi := &file_api_pecker_v1_peck_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicParam.ProtoReflect.Descriptor instead.
func (*DynamicParam) Descriptor() ([]byte, []int) {
	return file_api_pecker_v1_peck_proto_rawDescGZIP(), []int{1}
}

func (x *DynamicParam) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *DynamicParam) GetQuery() map[string]string {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *DynamicParam) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type PeckReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *PeckReply) Reset() {
	*x = PeckReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pecker_v1_peck_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeckReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeckReply) ProtoMessage() {}

func (x *PeckReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_pecker_v1_peck_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeckReply.ProtoReflect.Descriptor instead.
func (*PeckReply) Descriptor() ([]byte, []int) {
	return file_api_pecker_v1_peck_proto_rawDescGZIP(), []int{2}
}

func (x *PeckReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type StopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId uint64 `protobuf:"varint,1,opt,name=planId,proto3" json:"planId,omitempty"`
	TaskId uint64 `protobuf:"varint,2,opt,name=taskId,proto3" json:"taskId,omitempty"`
}

func (x *StopRequest) Reset() {
	*x = StopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pecker_v1_peck_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRequest) ProtoMessage() {}

func (x *StopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_pecker_v1_peck_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRequest.ProtoReflect.Descriptor instead.
func (*StopRequest) Descriptor() ([]byte, []int) {
	return file_api_pecker_v1_peck_proto_rawDescGZIP(), []int{3}
}

func (x *StopRequest) GetPlanId() uint64 {
	if x != nil {
		return x.PlanId
	}
	return 0
}

func (x *StopRequest) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type StopReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *StopReply) Reset() {
	*x = StopReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pecker_v1_peck_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopReply) ProtoMessage() {}

func (x *StopReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_pecker_v1_peck_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopReply.ProtoReflect.Descriptor instead.
func (*StopReply) Descriptor() ([]byte, []int) {
	return file_api_pecker_v1_peck_proto_rawDescGZIP(), []int{4}
}

func (x *StopReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

var File_api_pecker_v1_peck_proto protoreflect.FileDescriptor

var file_api_pecker_v1_peck_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f,
	0x70, 0x65, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x65, 0x63, 0x6b,
	0x65, 0x72, 0x22, 0xff, 0x06, 0x0a, 0x0b, 0x50, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65,
	0x18, 0x23, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x73, 0x73, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x6e, 0x75, 0x6d, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x65, 0x70, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x73, 0x74, 0x65, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x21, 0x20, 0x03, 0x28, 0x05, 0x52, 0x04,
	0x6e, 0x75, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x22, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x2e, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x49, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x6d, 0x61,
	0x78, 0x49, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x3a, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x50,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x3a, 0x0a, 0x0d, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0d, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4b, 0x65, 0x65, 0x70, 0x41,
	0x6c, 0x69, 0x76, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x32, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x02, 0x68, 0x32, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x42, 0x6f, 0x64, 0x79, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x42, 0x6f,
	0x64, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x12, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x1a, 0x3a, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x8c, 0x02, 0x0a, 0x0c, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x3b, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e,
	0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x2e, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x35, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x1a, 0x3a, 0x0a,
	0x0c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x38, 0x0a, 0x0a, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x1f, 0x0a, 0x09, 0x50, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x3d, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x22, 0x1f, 0x0a, 0x09, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x32, 0x6d, 0x0a, 0x0b, 0x50, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x70, 0x65, 0x63, 0x6b, 0x12, 0x13, 0x2e, 0x70, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x2e, 0x50, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x11, 0x2e, 0x70, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x50, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x2e, 0x0a, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x12, 0x13, 0x2e, 0x70, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x11, 0x2e, 0x70, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x42, 0x12, 0x5a, 0x10, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_pecker_v1_peck_proto_rawDescOnce sync.Once
	file_api_pecker_v1_peck_proto_rawDescData = file_api_pecker_v1_peck_proto_rawDesc
)

func file_api_pecker_v1_peck_proto_rawDescGZIP() []byte {
	file_api_pecker_v1_peck_proto_rawDescOnce.Do(func() {
		file_api_pecker_v1_peck_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_pecker_v1_peck_proto_rawDescData)
	})
	return file_api_pecker_v1_peck_proto_rawDescData
}

var file_api_pecker_v1_peck_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_api_pecker_v1_peck_proto_goTypes = []interface{}{
	(*PeckRequest)(nil),  // 0: pecker.PeckRequest
	(*DynamicParam)(nil), // 1: pecker.DynamicParam
	(*PeckReply)(nil),    // 2: pecker.PeckReply
	(*StopRequest)(nil),  // 3: pecker.StopRequest
	(*StopReply)(nil),    // 4: pecker.StopReply
	nil,                  // 5: pecker.PeckRequest.HeadersEntry
	nil,                  // 6: pecker.DynamicParam.HeadersEntry
	nil,                  // 7: pecker.DynamicParam.QueryEntry
}
var file_api_pecker_v1_peck_proto_depIdxs = []int32{
	5, // 0: pecker.PeckRequest.headers:type_name -> pecker.PeckRequest.HeadersEntry
	1, // 1: pecker.PeckRequest.dynamicParams:type_name -> pecker.DynamicParam
	6, // 2: pecker.DynamicParam.headers:type_name -> pecker.DynamicParam.HeadersEntry
	7, // 3: pecker.DynamicParam.query:type_name -> pecker.DynamicParam.QueryEntry
	0, // 4: pecker.PeckService.peck:input_type -> pecker.PeckRequest
	3, // 5: pecker.PeckService.stop:input_type -> pecker.StopRequest
	2, // 6: pecker.PeckService.peck:output_type -> pecker.PeckReply
	4, // 7: pecker.PeckService.stop:output_type -> pecker.StopReply
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_api_pecker_v1_peck_proto_init() }
func file_api_pecker_v1_peck_proto_init() {
	if File_api_pecker_v1_peck_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_pecker_v1_peck_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pecker_v1_peck_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pecker_v1_peck_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeckReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pecker_v1_peck_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pecker_v1_peck_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_pecker_v1_peck_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_pecker_v1_peck_proto_goTypes,
		DependencyIndexes: file_api_pecker_v1_peck_proto_depIdxs,
		MessageInfos:      file_api_pecker_v1_peck_proto_msgTypes,
	}.Build()
	File_api_pecker_v1_peck_proto = out.File
	file_api_pecker_v1_peck_proto_rawDesc = nil
	file_api_pecker_v1_peck_proto_goTypes = nil
	file_api_pecker_v1_peck_proto_depIdxs = nil
}

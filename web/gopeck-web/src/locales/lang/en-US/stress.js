export default {
    'stress.planName': 'Stress Test Name',
    'stress.time': 'Stress Test Duration',
    'stress.stressTimePlaceholder': 'Please enter the stress test duration in minutes',
    'stress.stressType': 'Stress Test Mode',
    'stress.stressMode': 'Pressure Mode',
    'stress.rpsMode': 'RPS Mode (Requests Per Second)',
    'stress.rpsModeRecord': 'RPS Mode',
    'stress.currencyMode': 'Concurrency Mode',
    'stress.normalMode': 'Constant Mode',
    'stress.stepMode': 'Step Mode',
    'stress.stepIntervalTime': 'Growth Interval',
    'stress.stepIntervalTimePlaceholder': 'Please enter the step growth time interval in minutes',
    'stress.task.taskName': 'API Name',
    'stress.task.rps': 'QPS',
    'stress.task.concurrencyNum': 'Concurrency',
    'stress.task.startRps': 'Initial QPS',
    'stress.task.startConcurrencyNum': 'Initial Concurrency',
    'stress.task.maxRps': 'Maximum QPS',
    'stress.task.maxConcurrencyNum': 'Maximum Concurrency',
    'stress.task.stepRps': 'QPS Increment Step',
    'stress.task.stepConcurrencyNum': 'Concurrency Increment Step',
    'stress.task.url': 'API URL',
    'stress.task.dynamicParamScript': 'Dynamic Parameter Script',
    'stress.task.responseCheckScript': 'Result Assertion Script',

    'stress.task.otherOptions': 'Other Configurations',
    'stress.task.disableCompression': 'Disable Compression',
    'stress.task.disableKeepAlive': 'Disable Keep-Alive',
    'stress.task.disableRedirect': 'Disable Redirect',
    'stress.task.enableHttp2': 'Enable HTTP2',
    'stress.task.addRequest': 'Add API',
    'stress.task.startStress': 'Start Stress Test',
    'stress.task.requestTimeout': 'API Timeout',
    'stress.requestTimeoutPlaceholder': 'Unit: seconds, default is 5 seconds',
    'stress.task.requestTitle': 'API',
    'stress.task.maxConnections': 'Maximum Connections',

    'stress.task.YES': 'Yes',
    'stress.task.NO': 'No',

    'stress.task.time_histogram': 'Time Consumption Histogram',

    'stress.task.http_code_distribution': 'HTTP Status Code Distribution',

    'stress.task.time_cost_statistics': 'Time Consumption Statistics',

    'stress.task.error_distribution': 'Error Distribution',

    'stress.task.result_check_distribution': 'Result Assertion Distribution',

    'stress.task.histogram.YAxisName': 'Quantity',
    'stress.task.histogram.XAxisName': 'CostTime(ms)',

    'stress.task.resetParameters': 'Reset Parameters',

    'stress.task.noError': 'No Errors',
    'stress.task.noData': 'No Data',

    'stress.task.tabBaseParam': 'Basic Parameters',

    'stress.start.success': 'Stress test started successfully',
    'stress.start.failed': 'Failed to start stress test',

    view_monitoring: 'View Monitoring',
    update_quota: 'Update Quota',
    goroutine_num: 'Goroutine Number',
    cpu_usage: 'CPU Usage',
    memory_usage: 'Memory Usage',
    loadavg_1_min: 'Load Average 1 Min',
    loadavg_5_min: 'Load Average 5 Min',
    loadavg_15_min: 'Load Average 15 Min',
    machine_address: 'Machine Address',
    rps_quota: 'RPS Quota',
    goroutine_quota: 'Goroutine Quota',
    rps_cost: 'RPS Cost',
    rps_percentage: 'RPS Percentage',
    goroutine_cost: 'Goroutine Cost',
    goroutine_percentage: 'Goroutine Percentage',
    running_task_count: 'Running Task Count',
    'button.action': 'Action',

    'error.get_node_list_failed': 'Failed to get the list of machines',
    machine_monitoring: 'Machine Monitoring',

    'stress.nodeDetail.cpuUsage': 'CPU Usage',
    'stress.nodeDetail.memUsage': 'Memory Usage',
    'stress.nodeDetail.load1': 'loadavg_1_min',
    'stress.nodeDetail.load5': 'loadavg_5_min',
    'stress.nodeDetail.load15': 'loadavg_15_min',
    'stress.nodeDetail.goroutineNum': 'goroutine_num',
    'stress.nodeDetail.time': 'Time',
    'stress.nodeDetail.quotaUpdateSuccess': 'Quota update successful',
    'stress.nodeDetail.quotaUpdateFailed': 'Quota update failed',
}
